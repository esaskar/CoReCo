#!/usr/bin/env python

import sys, os

ddir = sys.argv[1] # DIR contains all .rawscores files: #qname, sname, ecs, jointp

fns = os.listdir(ddir)

FN_SUFFIX = ".rawscores"

fns.sort()
for fn in fns:
	if not fn.endswith(FN_SUFFIX):
		continue 
	f = open("%s/%s" % (ddir, fn))
	#fn[:-len(FN_SUFFIX)] means the file name without the suffix. (like hello.txt -> hello)
	#here "-" is seen as the end at the starts point: example str[:-1] mean show str until the last character (without last one) 
	fn = fn[:-len(FN_SUFFIX)]
	#fn is the long org name: {Pichia_stipitis}.rawscores
	o1 = open("%s/%s.seqscores" % (ddir, fn), "w")
	o2 = open("%s/%s.ecscores" % (ddir, fn), "w")
	blastseqscores = {} # seq1 -> (score, seq2)
	gtgseqscores = {}   # seq1 -> (score, seq2)
	blastecscores = {}  # ec -> (score, seq1, seq2)
	gtgecscores = {}    # sc -> (score, seq1, seq2)
	print "%s..." % (fn)
	#f contains longname.rawscores file
	for s in f:
		if s.startswith("#"):
			o1.write(s)
			o2.write(s)
			continue
	####################################################
	#very important
        #seq1, seq2, ec, maxblast, maxgtg = s.strip().split("\t")
		seq1, seq2, ec, jointp, maxgtg = s.strip().split("\t")
		ecs = ec.split(",")
		if "" in ecs:
			print s
		if "?" in ecs:
			ecs.remove("?")
		if len(ecs) == 0:
			continue
		if jointp == "?":
			jointp = 0
		else:
			jointp = float(jointp)
		if maxgtg == "?":
			maxgtg = 0
		else:            
			maxgtg = float(maxgtg)
		# seq1 == qname   seq2 == sname
		#chose max jointp score for each seq1(qname) vs seq2(sname)
		if seq1 not in blastseqscores or jointp > blastseqscores[seq1][0]:
			blastseqscores[seq1] = (jointp, seq2, ",".join(ecs))
        	if seq1 not in gtgseqscores or maxgtg > gtgseqscores[seq1][0]:
			gtgseqscores[seq1] = (maxgtg, seq2, ",".join(ecs))

		#This will choosing the maxe jointp for each ec with (seq1, seq2) pairs
		for ec in ecs:
			if ec not in blastecscores or jointp > blastecscores[ec][0]:
				blastecscores[ec] = (jointp, seq1, seq2)
           		if ec not in gtgecscores or maxgtg > gtgecscores[ec][0]:
           		        gtgecscores[ec] = (maxgtg, seq1, seq2)
	print "file deal finished"
	keys = blastseqscores.keys()
	keys.sort()
	o1.write("#generated by %s\n" % (" ".join(sys.argv)))
	o1.write("#Seq BlastScore BlastQuerySeq BlastMatchSeq GTGScore GTGQuerySeq GTGMatchSeq\n")
	#o1.write("#Seq BlastScore BlastMatchSeq\n")
	for seq in keys:
		o1.write("%s\t%s\t%s\t%s\t%s\t%s\t%s\n" % (seq, 
                                                   blastseqscores[seq][0], 
                                                   blastseqscores[seq][1],
                                                   blastseqscores[seq][2],
                                                   gtgseqscores[seq][0], 
                                                   gtgseqscores[seq][1],
                                                   gtgseqscores[seq][2])) 
	keys = blastecscores.keys()
	keys.sort()
	o2.write("#generated by %s\n" % (" ".join(sys.argv)))
	o2.write("#EC BlastScore BlastQuerySeq BlastMatchSeq GTGScore GTGQuerySeq GTGMatchSeq\n")
	#o2.write("#EC BlastScore BlastQuerySeq BlastMatchSeq\n")
	for ec in keys:
		o2.write("%s\t%s\t%s\t%s\t%s\t%s\t%s\n" % (ec, 
                                                   blastecscores[ec][0], 
                                                   blastecscores[ec][1], 
                                                   blastecscores[ec][2],
                                                   gtgecscores[ec][0], 
                                                   gtgecscores[ec][1], 
                                                   gtgecscores[ec][2]))
    
